<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Controls.Sample"
    xmlns:localData="using:Controls.Sample.Data" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="Controls.Sample.App"
    >

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- 
                    Styles that define common aspects of the platform look and feel
                    Required by Visual Studio project and item templates
                 -->
                <ResourceDictionary Source="Common/StandardStyles.xaml"/>
                
            </ResourceDictionary.MergedDictionaries>

            <!-- Application-specific resources -->

            <x:String x:Key="AppName">Controls.Sample</x:String>
            <Style x:Key="CalenderDateContainerStyle" TargetType="GridViewItem">
            	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            	<Setter Property="Background" Value="Transparent"/>
            	<Setter Property="TabNavigation" Value="Local"/>
            	<Setter Property="IsHoldingEnabled" Value="True"/>
            	<Setter Property="Margin" Value="0,0,0,0"/>
            	<Setter Property="Template">
            		<Setter.Value>
            			<ControlTemplate TargetType="GridViewItem">
            				<Border x:Name="OuterContainer">
            					<VisualStateManager.VisualStateGroups>
            						<VisualStateGroup x:Name="CommonStates">
            							<VisualState x:Name="Normal"/>
            							<VisualState x:Name="PointerOver">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Pressed">
            								<Storyboard>
            									<PointerDownThemeAnimation TargetName="ContentContainer"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="PointerOverPressed">
            								<Storyboard>
            									<PointerDownThemeAnimation TargetName="ContentContainer"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Disabled">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="FocusStates">
            							<VisualState x:Name="Focused">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unfocused"/>
            							<VisualState x:Name="PointerFocused"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="SelectionHintStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="VerticalSelectionHint">
            								<Storyboard>
            									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="HorizontalSelectionHint">
            								<Storyboard>
            									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
            									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="NoSelectionHint"/>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="SelectionStates">
            							<VisualState x:Name="Unselecting">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Unselected">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="UnselectedPointerOver">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="UnselectedSwiping">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Selecting">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="Selected">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="SelectedSwiping">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="SelectedUnfocused">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
            									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
            										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="MiddleSelected">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground_Copy" d:IsOptimized="True"/>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="DragStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="NotDragging"/>
            							<VisualState x:Name="Dragging">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
            									<DragItemThemeAnimation TargetName="InnerDragContent"/>
            									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
            									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="DraggingTarget">
            								<Storyboard>
            									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="MultipleDraggingPrimary">
            								<Storyboard>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
            									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
            									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
            									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
            									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
            									<DragItemThemeAnimation TargetName="ContentBorder"/>
            									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
            									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
            									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
            									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="MultipleDraggingSecondary">
            								<Storyboard>
            									<FadeOutThemeAnimation TargetName="ContentContainer"/>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="ReorderHintStates">
            							<VisualStateGroup.Transitions>
            								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
            							</VisualStateGroup.Transitions>
            							<VisualState x:Name="NoReorderHint"/>
            							<VisualState x:Name="BottomReorderHint">
            								<Storyboard>
            									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="TopReorderHint">
            								<Storyboard>
            									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="RightReorderHint">
            								<Storyboard>
            									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
            								</Storyboard>
            							</VisualState>
            							<VisualState x:Name="LeftReorderHint">
            								<Storyboard>
            									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            						<VisualStateGroup x:Name="DataVirtualizationStates">
            							<VisualState x:Name="DataAvailable"/>
            							<VisualState x:Name="DataPlaceholder">
            								<Storyboard>
            									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
            										<DiscreteObjectKeyFrame KeyTime="0">
            											<DiscreteObjectKeyFrame.Value>
            												<Visibility>Visible</Visibility>
            											</DiscreteObjectKeyFrame.Value>
            										</DiscreteObjectKeyFrame>
            									</ObjectAnimationUsingKeyFrames>
            									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
            										<DiscreteObjectKeyFrame KeyTime="0">
            											<DiscreteObjectKeyFrame.Value>
            												<Visibility>Visible</Visibility>
            											</DiscreteObjectKeyFrame.Value>
            										</DiscreteObjectKeyFrame>
            									</ObjectAnimationUsingKeyFrames>
            								</Storyboard>
            							</VisualState>
            						</VisualStateGroup>
            					</VisualStateManager.VisualStateGroups>
            					<Grid x:Name="ReorderHintContent" Background="Transparent">
            						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Margin="0" Opacity="0" VerticalAlignment="Top"/>
            						<Border x:Name="ContentContainer">
            							<Grid x:Name="InnerDragContent">
            								<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="0" Opacity="0" StrokeThickness="0"/>
            								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
            								<Rectangle x:Name="SelectionBackground" Fill="#FFFF3366" Margin="0" Opacity="0" StrokeThickness="0"/>
            								<Rectangle x:Name="SelectionBackground_Copy" Fill="#FFF0F0F0" Margin="0" Opacity="0" StrokeThickness="0"/>
            								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0">
            									<Grid>
            										<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
            										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
            										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0" StrokeThickness="0"/>
            									</Grid>
            								</Border>
            								<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="0" Opacity="0" Stroke="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" StrokeThickness="0"/>
            								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0" VerticalAlignment="Top">
            									<Grid x:Name="SelectedCheckMark" Opacity="0"/>
            								</Border>
            								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
            							</Grid>
            						</Border>
            					</Grid>
            				</Border>
            			</ControlTemplate>
            		</Setter.Value>
            	</Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>

